<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: agile development | Dennis Woo]]></title>
  <link href="http://dwoodev.github.io/categories/agile-development/atom.xml" rel="self"/>
  <link href="http://dwoodev.github.io/"/>
  <updated>2013-11-13T18:57:28-08:00</updated>
  <id>http://dwoodev.github.io/</id>
  <author>
    <name><![CDATA[Dennis Woo]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[LeanUX and Agile - Magic Workflow Sauce?]]></title>
    <link href="http://dwoodev.github.io/blog/2013/11/13/leanux-and-agile-magic-workflow-sauce/"/>
    <updated>2013-11-13T12:47:00-08:00</updated>
    <id>http://dwoodev.github.io/blog/2013/11/13/leanux-and-agile-magic-workflow-sauce</id>
    <content type="html"><![CDATA[<p>Awesome presentation last night by Carbon Five&rsquo;s <a href="twitter.com/chemphill">Courtney Hemphill</a> for BayALN at Adobe&rsquo;s offices in San Francisco.</p>

<p>This preso is really magic sauce for those like me who have struggled to get design integrated an Agile development workflow.  The issue has been debated on <a href="http://stackoverflow.com/questions/658836/how-do-you-apply-scrum-to-the-design-part-of-web-development">stackoverflow</a>, with the top response earning the rejoinder:</p>

<blockquote><p>I strongly disagree with the answer provided by Jason. The whole point of Scrum is to get rid of the method where designers first &ldquo;do their thing&rdquo; and then go on to other stuff. That&rsquo;s completely and 100% against all lean / Scrum principles!</p></blockquote>

<p>  At a recent Noisebridge/Rails School training on Agile estimation, integration of design was the first question that came from the audience. A <a href="http://www.upassoc.org/upa_publications/jus/2007may/agile-ucd.pdf">whitepaper by Autodesk&rsquo;s Desiree Sy</a> suggests a staggered workflow with designers and developers on separate tracks:</p>

<p><img src="/images/custom/posts/developer-designer-different-tracks.jpg" title="Can you read this" ></p>

<p>I grant that this type of workflow could work, and probably beats the traditional waterfall by a longshot.  But in having been participant in this sort of structure in previous work, I can report it feels in need of improvement.  The separation of design was often derided as &ldquo;tossing over the fence&rdquo; &mdash; and is in practice, a mini-waterfall, the exact thing we were trying to evolve from by adopting Agile.  Designers were not pairing with developers due to this structure and cultural walls went up.  Two weeks sprint cycles became de facto one month sprints, pushing risk up.</p>

<h2>Enter Mixing LeanUX and Agile</h2>

<iframe src="http://www.slideshare.net/slideshow/embed_code/26796266" width="427" height="356" frameborder="0" marginwidth="0" marginheight="0" scrolling="no" style="border:1px solid #CCC;border-width:1px 1px 0;margin-bottom:5px" allowfullscreen> </iframe>


<p> <div style="margin-bottom:5px"> <strong> <a href="https://www.slideshare.net/carbonfive/flowcon-mixing-lean-ux-agile-development-26796266" title="Flowcon - Mixing Lean UX &amp; Agile Development" target="_blank">Flowcon &ndash; Mixing Lean UX &amp; Agile Development</a> </strong> from <strong><a href="http://www.slideshare.net/carbonfive" target="_blank">Carbon Five</a></strong> </div></p>

<p>The whole deck is worth a review &mdash; do yourself a favor and take 10 minutes to at least glance through it right now.  A primary takeaway is the stepping away from a traditional design team and pixel-perfect design up front, and relying on more communicative, cross-functional teams.</p>

<p><strong>Also mentioned in the talk but not in the deck:</strong></p>

<ul>
<li>They typically run 1-week sprints.</li>
<li>Smallest team is 3 — dev, designer, product manager/engagement manager.</li>
<li>They don’t have a dedicated scrum master.</li>
<li>They do a lot of <strong>pairing and joint white-board</strong> to avoid &ldquo;over the fence&rdquo; issues.</li>
<li>They use a <strong>design charrette</strong> (<a href="http://www.questionablemethods.com/2011/11/design-charrette.html">http://www.questionablemethods.com/2011/11/design-charrette.html</a> — that’s the name of the blog&hellip;it’s not actually a questionable method&hellip;).</li>
<li>No traditional heavy-wireframing or pixel-perfect details.  Sketch it on whiteboards.
(I&rsquo;m assumping they make the Lean Startup assumption that functionality tends to trump prematurely optimized design, and focus on precision in design later)</li>
<li>To enable velocity, they have a design AND development vocabulary ready to go.</li>
<li>They have a <strong>balanced team</strong> approach that eschews traditional designer, developer and manager roles in favor of concurrency.  In fact, it appears they&rsquo;ve just had a <a href="http://www.balancedteam.org/balancedteamsf2013">conference</a> focused on balanced teams.</li>
<li>They have a concept of <strong>cadence</strong>, which dictates the following must-dos:

<ul>
<li>Monday — TEAM Retrospective</li>
<li>Friday — CUSTOMER meeting with product, observed usage.</li>
</ul>
</li>
<li>Estimation requires that they scope things down to have 1-week deliverables.</li>
<li>Typical engagement is 12 weeks, upwards to 1 year.</li>
<li>They do a sprint 0 (first week).  First customer involvement is after week 1, two weeks after kickoff, which is still pretty fast.</li>
<li>Disappearing boundaries for team members — developers design a bit; designers understand code, everybody is cross-functional.</li>
<li>Much direct involvement with the client.</li>
<li>They involve the customer in <strong>hybrid prototyping</strong> where they use cutouts of the existing product UI and have the customer help with the design.</li>
<li>They use Rails Cucumber-style Behavior-Driven Design (BDD) language to capture stories.</li>
<li>They setup strong story acceptance criteria.</li>
</ul>


<p><strong>It seems that the Carbon 5 method requires a fair amount of prefacing:</strong></p>

<ul>
<li>Client needs to drink the kool-aid</li>
<li>Traditional design culture is pushed aside a bit (&ldquo;Get out of the deliverables business&rdquo; is a LeanUX mantra.  More on this in other posts&hellip;)</li>
</ul>


<p><strong>Some questions I didn&rsquo;t have the opportunity to ask:</strong></p>

<ul>
<li>In an engagement of this sort, does the team require a <a href="http://uxdesign.smashingmagazine.com/2012/11/06/design-spikes-fit-big-picture-ux-agile-development/">design spike</a>?  It seems possible to steer into a local max with fast, iterative feedback.  Also, <a href="http://scaledagileframework.com/spikes/">story complexity may necesitate</a>.</li>
<li>Lean Marketing calls for tools like split testing of a product.  Often, the trend of a preferred product feature will not emerge until there&rsquo;s sufficient sample, which could take wweks.  How does the methodology account for that?</li>
</ul>

]]></content>
  </entry>
  
</feed>
